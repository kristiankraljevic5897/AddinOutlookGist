{"version":3,"file":"taskpane.js","mappings":"CAAA,WACE,aAEA,IAAIA,EACAC,EA8DJ,SAASC,EAAUC,GACjBC,EAAE,kBAAkBC,OACpBD,EAAE,mBAAmBC,OACrBD,EAAE,wBAAwBE,OAE1BC,aAAaJ,GAAM,SAASK,EAAOC,GAC7BA,IAGFL,EAAE,cAAcM,QAChBC,cAAcP,EAAE,cAAeI,EAAOI,GAE1C,GACF,CAEA,SAASA,IACPR,EAAE,kBAAkBS,WAAW,YAC/BT,EAAE,gBAAgBU,YAAY,eAAeD,WAAW,WACxDT,EAAEW,MAAMC,SAAS,gBAAgBC,SAAS,eAAeC,KAAK,UAAW,UAC3E,CAEA,SAASC,EAAUV,GACjBL,EAAE,mBAAmBC,OACrBD,EAAE,wBAAwBC,OAC1BD,EAAE,kBAAkBgB,KAAKX,GACzBL,EAAE,kBAAkBE,MACtB,CAEA,SAASe,EAAeC,GACtBtB,EAASuB,KAAKC,MAAMF,EAAQA,SAC5BG,UAAUzB,GAAQ,SAAS0B,GACzBzB,EAAe0B,QACf1B,EAAiB,KACjBC,EAAUF,EAAO4B,eACnB,GACF,CAEA,SAASC,EAAaP,GACpBrB,EAAiB,IACnB,CAnGA6B,OAAOC,WAAa,SAASC,GAE3BC,OAAOC,UAAUC,OAAM,YAErBnC,EAASoC,cAGKpC,EAAO4B,eAEnB1B,EAAUF,EAAO4B,gBAGjBxB,EAAE,mBAAmBE,OAKvBF,EAAE,kBAAkBiC,GAAG,SAAS,WAC9B,IAAMC,EAASlC,EAAE,4BAA4BmC,MAC7CC,QAAQF,GAAQ,SAASG,EAAMhC,GACzBgC,EACFC,iBAAiBD,GAAM,SAAUE,EAASlC,GACpCkC,EACFb,OAAOc,QAAQC,QAAQC,KAAKC,KAAKC,qBAAqBL,EACpD,CAACM,aAAcnB,OAAOoB,aAAaC,OAAO,SAASzB,GAC7CA,EAAO0B,SAAWtB,OAAOuB,kBAAkBC,QAC7CnC,EAAU,0BAA4BO,EAAOjB,MAAMa,QAEzD,IAEAH,EAAU,wCAA0CV,EAExD,IAEAU,EAAU,4BAA8BV,EAE5C,GACF,IAGAL,EAAE,kBAAkBiC,GAAG,SAAS,WAE9B,IAAIkB,EAAM,IAAIC,IAAI,eAAeC,WAAWC,OAAOC,UAAUC,WACzD5D,IAGFuD,EAAMA,EAAM,mBAAqBvD,EAAO4B,eAAiB,kBAAoB5B,EAAO6D,eAKtF/B,OAAOc,QAAQkB,GAAGC,mBAAmBR,EAFf,CAAES,MAAO,GAAIC,OAAQ,GAAIC,iBAAiB,IAEP,SAASxC,IAChEzB,EAAiByB,EAAOyC,OACTC,gBAAgBtC,OAAOuC,UAAUC,sBAAuBjD,GACvEpB,EAAemE,gBAAgBtC,OAAOuC,UAAUE,oBAAqB1C,EACvE,GACF,GACF,GACF,CA0CD,CA1GD","sources":["webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["(function(){\n  'use strict';\n\n  let config;\n  let settingsDialog;\n\n  Office.initialize = function(reason){\n\n    jQuery(document).ready(function(){\n\n      config = getConfig();\n\n      // Check if add-in is configured.\n      if (config && config.gitHubUserName) {\n        // If configured, load the gist list.\n        loadGists(config.gitHubUserName);\n      } else {\n        // Not configured yet.\n        $('#not-configured').show();\n      }\n\n      // When insert button is selected, build the content\n      // and insert into the body.\n      $('#insert-button').on('click', function(){\n        const gistId = $('.ms-ListItem.is-selected').val();\n        getGist(gistId, function(gist, error) {\n          if (gist) {\n            buildBodyContent(gist, function (content, error) {\n              if (content) {\n                Office.context.mailbox.item.body.setSelectedDataAsync(content,\n                  {coercionType: Office.CoercionType.Html}, function(result) {\n                    if (result.status === Office.AsyncResultStatus.Failed) {\n                      showError('Could not insert gist: ' + result.error.message);\n                    }\n                });\n              } else {\n                showError('Could not create insertable content: ' + error);\n              }\n            });\n          } else {\n            showError('Could not retrieve gist: ' + error);\n          }\n        });\n      });\n\n      // When the settings icon is selected, open the settings dialog.\n      $('#settings-icon').on('click', function(){\n        // Display settings dialog.\n        let url = new URI('dialog.html').absoluteTo(window.location).toString();\n        if (config) {\n          // If the add-in has already been configured, pass the existing values\n          // to the dialog.\n          url = url + '?gitHubUserName=' + config.gitHubUserName + '&defaultGistId=' + config.defaultGistId;\n        }\n\n        const dialogOptions = { width: 20, height: 40, displayInIframe: true };\n\n        Office.context.ui.displayDialogAsync(url, dialogOptions, function(result) {\n          settingsDialog = result.value;\n          settingsDialog.addEventHandler(Office.EventType.DialogMessageReceived, receiveMessage);\n          settingsDialog.addEventHandler(Office.EventType.DialogEventReceived, dialogClosed);\n        });\n      })\n    });\n  };\n\n  function loadGists(user) {\n    $('#error-display').hide();\n    $('#not-configured').hide();\n    $('#gist-list-container').show();\n\n    getUserGists(user, function(gists, error) {\n      if (error) {\n\n      } else {\n        $('#gist-list').empty();\n        buildGistList($('#gist-list'), gists, onGistSelected);\n      }\n    });\n  }\n\n  function onGistSelected() {\n    $('#insert-button').removeAttr('disabled');\n    $('.ms-ListItem').removeClass('is-selected').removeAttr('checked');\n    $(this).children('.ms-ListItem').addClass('is-selected').attr('checked', 'checked');\n  }\n\n  function showError(error) {\n    $('#not-configured').hide();\n    $('#gist-list-container').hide();\n    $('#error-display').text(error);\n    $('#error-display').show();\n  }\n\n  function receiveMessage(message) {\n    config = JSON.parse(message.message);\n    setConfig(config, function(result) {\n      settingsDialog.close();\n      settingsDialog = null;\n      loadGists(config.gitHubUserName);\n    });\n  }\n\n  function dialogClosed(message) {\n    settingsDialog = null;\n  }\n})();"],"names":["config","settingsDialog","loadGists","user","$","hide","show","getUserGists","gists","error","empty","buildGistList","onGistSelected","removeAttr","removeClass","this","children","addClass","attr","showError","text","receiveMessage","message","JSON","parse","setConfig","result","close","gitHubUserName","dialogClosed","Office","initialize","reason","jQuery","document","ready","getConfig","on","gistId","val","getGist","gist","buildBodyContent","content","context","mailbox","item","body","setSelectedDataAsync","coercionType","CoercionType","Html","status","AsyncResultStatus","Failed","url","URI","absoluteTo","window","location","toString","defaultGistId","ui","displayDialogAsync","width","height","displayInIframe","value","addEventHandler","EventType","DialogMessageReceived","DialogEventReceived"],"sourceRoot":""}